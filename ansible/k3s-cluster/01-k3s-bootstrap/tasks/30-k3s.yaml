- name: Check for installation
  stat:
    path: /usr/local/bin/k3s
  register: k3s_installed
  changed_when: false

- name: Create /etc/rancher/k3s
  file: 
    path: /etc/rancher/k3s
    recurse: true
    state: directory
    mode: '0600'

- name: Place /etc/rancher/k3s/config.yaml
  ansible.builtin.template:
    src: k3s-config.yaml
    dest: /etc/rancher/k3s/config.yaml
    mode: '0600'
  notify: enable and restart k3s

- name: Create /var/lib/rancher/k3s/server/manifests
  file: 
    path: /var/lib/rancher/k3s/server/manifests
    recurse: true
    state: directory
    mode: '0600'

- name: Place /var/lib/rancher/k3s/server/psa.yaml
  ansible.builtin.template:
    src: k3s-psa.yaml
    dest: /var/lib/rancher/k3s/server/psa.yaml
    mode: '0600'
  notify: enable and restart k3s

#- name: /var/lib/rancher/k3s/server/manifests/netpol-kube-system.yaml
#  ansible.builtin.template:
#    src: k3s-netpol-kube-system.yaml
#    dest: /var/lib/rancher/k3s/server/manifests/netpol-kube-system.yaml
#    mode: '0600'
#  notify: enable and restart k3s

# - name: /var/lib/rancher/k3s/server/manifests/storageclass-local-path-retain.yaml
#   ansible.builtin.template:
#     src: k3s-local-path-retain.yaml
#     dest: /var/lib/rancher/k3s/server/manifests/storageclass-local-path-retain.yaml
#     mode: '0600'
#   notify: enable and restart k3s

- name: Download k3s installer
  when: not k3s_installed.stat.exists
  get_url:
    url: https://get.k3s.io
    dest: '/tmp/k3s-installer.sh'
    mode: '0770'

- name: Install k3s
  when: not k3s_installed.stat.exists
  ansible.builtin.command: /tmp/k3s-installer.sh
  notify: enable and restart k3s

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  ansible.builtin.meta: flush_handlers
